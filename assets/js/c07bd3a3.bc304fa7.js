"use strict";(self.webpackChunktse_dev_api=self.webpackChunktse_dev_api||[]).push([[3818],{4783:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var n=s(4848),i=s(8453);const o={sidebar_position:3,title:"Principle of Least Privilege",slug:"principle-of-least-privilege",description:"Principle of Least Privilege",tags:["general knowledge","privileges","beginner","concepts","scopes"]},r=void 0,a={id:"support/general-knowledge/principle-of-least-privilege",title:"Principle of Least Privilege",description:"Principle of Least Privilege",source:"@site/docs/support/general-knowledge/principle-of-least-privilege.md",sourceDirName:"support/general-knowledge",slug:"/support/general-knowledge/principle-of-least-privilege",permalink:"/docs/support/general-knowledge/principle-of-least-privilege",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/support/general-knowledge/principle-of-least-privilege.md",tags:[{inline:!0,label:"general knowledge",permalink:"/docs/tags/general-knowledge"},{inline:!0,label:"privileges",permalink:"/docs/tags/privileges"},{inline:!0,label:"beginner",permalink:"/docs/tags/beginner"},{inline:!0,label:"concepts",permalink:"/docs/tags/concepts"},{inline:!0,label:"scopes",permalink:"/docs/tags/scopes"}],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Principle of Least Privilege",slug:"principle-of-least-privilege",description:"Principle of Least Privilege",tags:["general knowledge","privileges","beginner","concepts","scopes"]},sidebar:"tutorialSidebar",previous:{title:"REST APIs",permalink:"/docs/support/general-knowledge/rest-apis"},next:{title:"OpenAPI Specification",permalink:"/docs/support/general-knowledge/openapi-specification"}},l={},c=[];function p(e){const t={a:"a",admonition:"admonition",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.strong,{children:"Principle of Least Privilege"})," refers to an information security concept where only the minimum necessary rights should be assigned to a subject that requests access to a resource."]}),"\n",(0,n.jsx)(t.p,{children:"Granting permissions to an access token beyond the scope of the necessary rights of an action can allow an attacker who manages to steal the token to obtain or change information in unwanted ways. Therefore, careful delegation of access rights can limit attackers to manipulate data."}),"\n",(0,n.jsxs)(t.p,{children:["Our APIs adopt the ",(0,n.jsx)(t.a,{href:"/docs/basics/scopes",children:"scopes system"}),", the application owner chooses which scopes are needed for the app to run properly and the users will be prompted to allow the requested permissions. Every resource has its own scope that could be either ",(0,n.jsx)(t.strong,{children:"read-only"})," or ",(0,n.jsx)(t.strong,{children:"full write"})," access, make sure to require the least amount of scopes possible for the correct functioning of your app, selecting as few permissions as possible."]}),"\n",(0,n.jsx)(t.admonition,{title:"DO NOT REQUIRE ALL THE SCOPES",type:"danger",children:(0,n.jsx)(t.p,{children:"We know it's easier to just require all the possible scopes in write access and not have to think about what's the lowest configuration of privileges that can be asked to the user, but we kindly ask you not to do that, in most of the cases in fact only 3-4 scopes are actually needed to use an application."})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>a});var n=s(6540);const i={},o=n.createContext(i);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);